// Generated by CoffeeScript 2.0.0-beta6
void function () {
  var absolutePathError, async, fs, getFile, getFiles, getFilesSync, getFileSync, glob, isAbsolutePath, Path, pathDoesNotExistError, readFile;
  fs = require('fs');
  glob = require('glob');
  Path = require('path');
  async = require('async');
  readFile = require('./fs_helpers').readFile;
  getFilesSync = function (basePath, extension) {
    return glob.sync(Path.normalize('' + basePath + '/**/*.' + extension)).map(getFileSync);
  };
  getFileSync = function (path) {
    if (!isAbsolutePath(path))
      throw absolutePathError();
    if (!fs.existsSync(path))
      throw pathDoesNotExistError(path);
    return {
      path: path,
      contents: readFile(path)
    };
  };
  getFiles = function (basePath, extension, cb) {
    return glob(Path.normalize('' + basePath + '/**/*.' + extension), function (err, paths) {
      if (null != err)
        return cb(err);
      return async.map(paths, getFile, function (err, files) {
        if (null != err)
          return cb(err);
        return cb(null, files);
      });
    });
  };
  getFile = function (path, cb) {
    if (!isAbsolutePath(path))
      return cb(absolutePathError());
    return fs.exists(path, function (pathExists) {
      if (!pathExists)
        return cb(pathDoesNotExistError(path));
      return readFile(path, function (err, contents) {
        if (null != err)
          return cb(err);
        return cb(null, {
          path: path,
          contents: contents
        });
      });
    });
  };
  absolutePathError = function () {
    return new Error('Path argument must be an absolute path');
  };
  pathDoesNotExistError = function (path) {
    return new Error('' + path + ' does not exist');
  };
  isAbsolutePath = function (path) {
    return /^\//.test(path);
  };
  module.exports = {
    getFiles: getFiles,
    getFilesSync: getFilesSync,
    getFile: getFile,
    getFileSync: getFileSync
  };
}.call(this);
