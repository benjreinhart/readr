{"name":"Readr","tagline":"Flexible Node.js file reading library.","body":"# readr\r\n\r\n[![Build Status](https://travis-ci.org/benjreinhart/readr.png)](https://travis-ci.org/benjreinhart/readr)\r\n\r\nFlexible Node.js file reading library.\r\n\r\nReadr is a library that abstracts reading files from disk. It supports recursively reading multiple files in a directory by extension or reading an individual file via a clean API. Readr's API provides both sync and async operations.\r\n\r\n## What can readr do for you?\r\n\r\nreadr is a tool to read files by type (extension) and return a formatted object with the following properties:\r\n\r\n* `path` - the absolute path of the file\r\n* `contents` - the contents of the file\r\n* `friendlyPath` (optional) a formatted string better suited for referencing the file\r\n\r\nIt provides a nice abstraction around sync and async file reading, as well as reading individual files and globbing a directory. It is compatible with node 0.8 upward.\r\n\r\n## Basic Example\r\n\r\nGiven the following directory tree:\r\n\r\n```\r\n/path/to/files/\r\n  * some_directory/\r\n    * file.txt\r\n    * another_file.txt\r\n    * csv_file.csv\r\n```\r\n\r\nfind all .txt files\r\n\r\n```javascript\r\nvar readr = require('readr');\r\nreadr('/path/to/files', {extension: 'txt'}, function(err, files) {\r\n  console.log(files)\r\n});\r\n/*\r\n  [\r\n    {\r\n      path: '/path/to/files/some_directory/file.txt',\r\n      contents: 'Contents of file.txt',\r\n      friendlyPath: 'some_directory/file'\r\n    },\r\n    {\r\n      path: '/path/to/files/some_directory/another_file.txt',\r\n      contents: 'Contents of another_file.txt',\r\n      friendlyPath: 'some_directory/another_file'\r\n    }\r\n  ]\r\n*/\r\n```\r\n\r\nGet a single file\r\n\r\n```javascript\r\nreadr('/path/to/files/some_director/csv_file.csv', {friendlyPath: 'csv_file'}, function(err, files){\r\n  console.log(files)\r\n});\r\n/*\r\n  [\r\n    {\r\n      path: '/path/to/files/some_directory/csv_file.csv',\r\n      contents: '',\r\n      friendlyPath: 'csv_file'\r\n    }\r\n  ]\r\n*/\r\n\r\n```\r\n\r\n## Installing\r\n\r\n`npm install readr`\r\n\r\n`var readr = require('readr');`\r\n\r\n\r\n## API\r\n\r\n#### readr(path[, options], callback)\r\n\r\n`path` can be either a directory or a file. If it is a directory, then it will glob for files with an extension equal to the `extension` option and return an array of files found. If it is a file, it will return an array (for consistency) with one result (the file).\r\n\r\n`options` can be the following:\r\n\r\n* `extension` (string) - the type of files to read\r\n* `friendlyPath` (string|function|bool)\r\n  * string - any/all files will have a `friendlyPath` attribute equal to the `friendlyPath` option\r\n  * function - will invoke the function for each file found, passing it `(path, absolutePath)` where `path` is the absolute path minus the extension and optionally minus the base directory. The result of this call will be the `friendlyPath` of the file object.\r\n  * bool - if `false`, the resulting file objects will have no `friendlyPath` attribute\r\n\r\n\r\n#### readr.sync(path[, options])\r\n\r\nSynchronous version of `readr`.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}